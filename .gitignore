# ============================================================================
# .gitignore for Customer Churn Prediction ANN Project
# ============================================================================
# This file tells Git which files and directories to ignore when tracking changes.
# It's essential for keeping your repository clean and secure.

# ============================================================================
# PYTHON-SPECIFIC IGNORES
# ============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook checkpoints
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
myenv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ============================================================================
# MACHINE LEARNING & DATA SCIENCE SPECIFIC
# ============================================================================

# Large datasets (add specific dataset files if they're large)
*.csv
!Churn_Modelling.csv  # Keep the main dataset but ignore others
data/
datasets/
raw_data/

# Model files (these can be large and regenerated)
# *.h5
# *.hdf5
# *.pkl
# *.pickle
# *.joblib
# *.model
# *.pt
# *.pth
# *.onnx
# models/
# saved_models/

# BUT KEEP ESSENTIAL MODEL FILES FOR THIS PROJECT (uncomment if you want to track them)
# !model.h5
# !*.pkl

# Training logs and outputs
logs/
tensorboard_logs/
wandb/
mlruns/
outputs/
checkpoints/

# TensorBoard logs
**/logs/
**/tb_logs/
**/tensorboard/

# Weights & Biases
wandb/

# MLflow
mlruns/

# Experiment tracking
experiments/
results/
plots/
figures/

# Cached data
cache/
.cache/

# Temporary ML files
temp/
tmp/
temporary/

# ============================================================================
# DEVELOPMENT ENVIRONMENT SPECIFIC
# ============================================================================

# Virtual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# ============================================================================
# OPERATING SYSTEM SPECIFIC
# ============================================================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ============================================================================
# STREAMLIT SPECIFIC
# ============================================================================

# Streamlit secrets and config
secrets.toml
.streamlit/secrets.toml
.streamlit/config.toml

# Streamlit cache
.streamlit/

# ============================================================================
# SECURITY & CREDENTIALS
# ============================================================================

# Environment variables and secrets
.env
.env.local
.env.development
.env.test
.env.production
.env.staging

# API keys and credentials
credentials.json
secrets.json
config.ini
settings.ini

# Private keys
*.pem
*.key
*.p12
*.pfx

# Database files
*.db
*.sqlite
*.sqlite3

# ============================================================================
# PROJECT SPECIFIC IGNORES
# ============================================================================

# Backup files
*.bak
*.backup
*_backup.*
backup/

# Temporary files
*.tmp
*.temp
*~

# Log files
*.log
logs.txt
debug.log
error.log

# Output files that can be regenerated
output/
results/
predictions/

# Large files that shouldn't be in version control
*.zip
*.tar.gz
*.rar
*.7z

# System files
.git/
.gitattributes

# Documentation builds
docs/_build/
site/

# Package files
*.deb
*.rpm

# ============================================================================
# COMMENTS AND EXPLANATIONS
# ============================================================================

# WHY THESE FILES ARE IGNORED:
#
# 1. __pycache__/ - Python bytecode cache, automatically regenerated
# 2. *.pkl files - Trained model artifacts, can be large and regenerated
# 3. myenv/ - Virtual environment, should be created locally
# 4. logs/ - Training logs, can be large and project-specific
# 5. .env files - Contains sensitive information like API keys
# 6. *.csv files - Large datasets that can be downloaded separately
# 7. .vscode/ - IDE-specific settings, varies by developer
# 8. .DS_Store - macOS system files, not relevant to the project
#
# WHAT TO INCLUDE IN VERSION CONTROL:
# - Source code (.py files)
# - Configuration files (requirements.txt)
# - Documentation (README.md)
# - Project structure files
# - Small sample datasets (if needed for testing)
#
# BEST PRACTICES:
# - Keep repositories under 100MB when possible
# - Never commit sensitive information (passwords, API keys)
# - Ignore files that can be automatically generated
# - Document any exceptions in comments above

# ============================================================================
# END OF .gitignore
# ============================================================================
